<!DOCTYPE html>
<html>

<head>
    <title></title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jQuery-slimScroll/1.3.8/jquery.slimscroll.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://unpkg.com/element-ui@2.13.0/lib/index.js"></script>
    <script src="https://unpkg.com/jss@9.8.7/dist/jss.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://unpkg.com/element-ui@2.13.0/lib/index.js"></script>
    <script src="../node_modules/vue-splitpane/dist/vue-split-pane.min.js"></script>
    <script src="_tmpData.js"></script>

    <link href="../node_modules/vue-splitpane//docs/index.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.css">
    <link rel="stylesheet" href="https://unpkg.com/element-ui@2.13.0/lib/theme-chalk/index.css">

    <style>
        .flex,
        .flex dt,
        .flex dd {
            width: 100%;
            display: block;
            padding: 0px;
            margin: 0px;
        }

        .flex.f-col {
            flex-flow: column;
        }

        .flex.f-row {
            flex-flow: row;
        }

        dl.flex {
            display: flex;
        }

        .flex dt {
            flex: 0;
        }

        .flex dd {
            flex: 1;
        }

        textarea {
            width: 100%;
            height: 15em;
        }

        pre {
            width: 100%;
            height: 100%;
            background: yellow;
            margin-top: .5em;
            overflow-y: auto;
        }

        ul {
            list-style-type: none;
            margin: 0;
            padding: .3em;
        }

        li {
            min-width: 5em;
            line-height: 1.3em;
            white-space: nowrap;
        }

        li:hover {
            color: blue;
            font-weight: 400;
            cursor: pointer;
        }

        li.active {
            background-color: #20FFA6;
        }

        .d-show {
            margin: 5px;
        }
    </style>
</head>

<body class="CSBody">
    <pre>
        可以 work ,但是可調控的參數過少,運用彈性過低,只能棄用
    </pre>
    <div id="app" class='components-container'>
        <template>
            <split-pane v-on:resize="resize" :min-percent='20' split="vertical">
                <template slot="paneL">
                    <ul>
                        <li v-for="(item) in tabsList"
                            v-bind:key="item"
                            v-bind:class="['tab-button', { active: currentTab === item }]">
                            <a @click="currentTab=item"> {{item}}</a>
                        </li>
                    </ul>
                </template>
                <template slot="paneR">
                    <split-pane split="horizontal">
                        <template slot="paneL">
                            <split-pane v-on:resize="resize" split="vertical" :default-percent='30'>
                                <template slot="paneL">
                                    C
                                </template>

                                <template slot="paneR">
                                    D
                                </template>

                            </split-pane>
                        </template>
                        <template slot="paneR">
                            B
                        </template>
                    </split-pane>
                </template>
            </split-pane>
        </template>
    </div>

    <script>
        $(() => {
            //Vue.component('split-pane', SplitPane);
            //const { Splitpanes, Pane } = splitpanes;
            let views = {
                std() {
                    var _obj = {
                        _vue: {
                            template: `
                            <div>
                            </div>
                            `
                        }
                    };
                    return _obj;
                },
            }


            //** # Main
            for (var k in views) {
                var { _vue } = views[k]();
                Vue.component(`x-${k}`, _vue);
            }
            let tabsList = Object.keys(views);

            var Main = {
                el: "#app",
                data: {
                    tabsList,
                    "currentTab": tabsList[0],
                    "Code": ''
                },
                computed: {
                    currentTabComponent() {
                        var _obj = views[this.currentTab];
                        this.Code = _obj;
                        var { _css } = _obj();
                        if (_css != null) styled.injectGlobal`${_css}`;
                        return `x-${this.currentTab}`;
                    }
                },
                
                methods: {
                    //TMD: 這個程序一定要有,不然會出現 error
                    resize() {
                        console.log('resize')
                    },
                    change() {
                        this.views[this.currentTab].template = this.Code;
                    },
                    copy() {

                    },
                    copy_com() {

                    }
                }
            };
            new Vue(Main);
        })

    </script>
</body>

</html>