using BLL.MES;
using BLL.MES.DataViews;
using Frame.Code;
using Frame.Code.Web.Select;
using Genesis.Common;
using Genesis.Library.BLL.MES;
using Genesis.Library.Frame.Code.Web.TableQuery;
using System.Dynamic;
using System.Linq;
using System.Web.Mvc;

namespace Genesis.Areas.<%=Areas%>.Controllers
{
	public class <%=FunctionName%>Controller : BaseController
	{
		ADMServices _svc = new ADMServices();
		#region == Page ==
		public ActionResult <%=FunctionName%>()
		{
			return View();
		}
		public ActionResult <%=FunctionName%>_Item(string SID, bool SingleMode = false)
		{
			/*
			dynamic data = new ExpandoObject();
			//處理基本的選項資料
			var EncodeFormatType = TableQueryService
				.AD_PARAMETER("EncodeFormatType", MDL.SearchKey.No)
				.FirstOrDefault()?.PARAMETER_VALUE;
			if (string.IsNullOrEmpty(EncodeFormatType) == false)
			{
				data.EncodeFormatType = (
					from x in EncodeFormatType.Split(',')
					select new SelectModel
					{
						No = x,
						Display = x,
						Value = x,
					}
					).ToList();
			}
			//依據 SID 判別新增 OR 讀取 ,再各別處理
			if (string.IsNullOrWhiteSpace(SID) == false)
			{
				var _data = _svc.<%=FunctionName%>_Read(SID);
				if (_data == null)
				{
					data.Msg = RES.BLL.Message.NoDataFound;
				}
				else {
					data.main = _data.main;
					data.items = _data.items;
					data.ctrl_items = _data.ctrl_items;
				}
			} 
			ViewData["result"] = ((object)data).ToJson(true);
			ViewData["SingleModel"] = SingleMode;
			*/
			return View();
		}
		#endregion
		#region == API ==

		[HttpPost]
		public ActionResult Save(<%=FunctionName%>_PostData post,bool isAdd=false)
		{
			//var result = _svc.<%=FunctionName%>_Save(post,true);
			//return Content((result).ToJson(true));
			return Content(post.ToJson(true));
		}

		[HttpPost]
		public ActionResult ListData(PagerQuery obj)
		{
			//var Result = _svc.AD_ENCODE_FORMAT_PagerQuery(obj);
			//return Content(Result.ToJson(true));
			return Content(obj.ToJson(true));
		}

		[HttpPost]
		public ActionResult Delete(string SID)
		{
			var result //= _svc.<%=FunctionName%>_Delete(SID);
				= "";
			return Content((result).ToJson(true));
		}

		[HttpPost]
		public ActionResult Enable(string SID,bool Enable)
		{
			var result //= _svc.<%=FunctionName%>_Enable(SID, Enable);
				= "";
			return Content((result).ToJson(true));
		}
		#endregion
	}
}