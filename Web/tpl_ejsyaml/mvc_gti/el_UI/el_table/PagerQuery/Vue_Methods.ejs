//#region [VueGridMethos]
//排序事件
sort_change(column) {
	this.grid.Sort = {
		Name: column.prop,
		isAsc: column.order == "ascending"
	}
	if (this.grid.data.length == 0) return;
	this.query(1);
},
e_SizeChange: function (size) {
	this.pagesize = size;
	this.query(1);
},
// 換頁事件
e_CurrentChange: function (currentPage) {
	this.query(currentPage);
},
//查詢事件
click_Query() {
	debugger
	var Conditions = {
		condition: "AND",
		rules: []
	};
	_.each(this.form, (value, field) => {
		if (value != "") {
			var _rule = { field, type: "string", operator: "contains", value };
			switch (field) {
				case "ENABLE_FLAG":
					if (value != 'All') {
						_rule.operator = "equal";
						_rule.value = [value];
						Conditions.rules.push(_rule);
					}
					break;
				default:
					Conditions.rules.push(_rule);
					break;
			}
		}
	});
	this.grid.Conditions = Conditions;
	this.query(1);
},

// 查詢處理程序
query(pageIdx) {
	var _self = this;
	_self.grid.Page.Index = pageIdx;
	var param = _self.grid.query_rule;
	//console.log({ query: param });
	var url=  '@Url.Action("ListData_","Route",new { area="MES"})';
	var _ajax = {
		url,
		type: 'post',
		param,
		success: this.query_success
	};
	$.submitForm(_ajax);
},
// 查詢成功處理程序
query_success(res) {
	debugger
	let { Data, Code = null, Message, Success = false } = res;
	if (Success) {
		let { PageInfo, gridData } = Data || {};
		this.grid.data = gridData;
		this.grid.row_count = PageInfo.RowCount;
	} else {
		var msg = Message != null
			? Message
			: '@BLL.InterFace.ErrCode.GenericErrorMessage'
			;
		this.$Alert.Err(msg);
	}
},
//#regionend [VueGridMethos]

