<!DOCTYPE html>
<html>

<head>
    <title></title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jQuery-slimScroll/1.3.8/jquery.slimscroll.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://unpkg.com/element-ui@2.13.0/lib/index.js"></script>
    <script src="https://unpkg.com/jss@9.8.7/dist/jss.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://unpkg.com/element-ui@2.13.0/lib/index.js"></script>
    <script src="node_modules/split.js/dist/split.js"></script>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.css">
    <link rel="stylesheet" href="https://unpkg.com/element-ui@2.13.0/lib/theme-chalk/index.css">

    <style>
        .flex,
        .flex dt,
        .flex dd {
            width: 100%;
            display: block;
            padding: 0px;
            margin: 0px;
        }

        .flex.f-col {
            flex-flow: column;
        }

        .flex.f-row {
            flex-flow: row;
        }

        dl.flex {
            display: flex;
        }

        .flex dt {
            flex: 0;
        }

        .flex dd {
            flex: 1;
        }

        textarea {
            width: 100%;
            height: 15em;
        }

        pre {
            width: 100%;
            height: 100%;
            background: yellow;
            margin-top: .5em;
            overflow-y: auto;
        }

        ul {
            list-style-type: none;
            margin: 0;
            padding: .3em;
        }

        li {
            min-width: 5em;
            line-height: 1.3em;
            white-space: nowrap;
        }

        li:hover {
            color: blue;
            font-weight: 400;
            cursor: pointer;
        }

        li.active {
            background-color: #20FFA6;
        }

        .d-show {
            margin: 5px;
        }

        #flex {
            display: flex;
            flex-direction: row;
        }

        .gutter {
            background-color: #eee;

            background-repeat: no-repeat;
            background-position: 50%;
        }

        .split {
     -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
     box-sizing: border-box;
     overflow-y: auto;
     overflow-x: hidden;
     height: 60vh;
 }
 .content {
     border: 1px solid #C0C0C0;
     box-shadow: inset 0 1px 2px #e4e4e4;
     background-color: #fff;
 }
 /* .split.split-horizontal,
 .gutter.gutter-horizontal {
     height: 100%;
 } */
    </style>
</head>

<body class="CSBody">
    <div id="app">
        <div id="app">
            <dl class="flex f-row">
                <dt style="min-width:13em;">
                    <ul>
                        <li v-for="(item) in tabsList" v-bind:key="item"
                            v-bind:class="['tab-button', { active: currentTab === item }]">
                            <a @click="currentTab =item"> {{item}}</a>
                        </li>
                    </ul>
                </dt>
                <dd style="height:95vh ;">
                    <dl class="flex f-col">
                        <dt>
                            <input type="button" value="Copy" @click="copy" />
                            <input type="button" value="Copy Components" @click="copy_com" />
                            <textarea v-model="Code" @blur="change()"></textarea>
                            <component v-bind:is="currentTabComponent" class="d-show" :sets="currentTab"></component>

                        </dt>
                        <dd>
                            <!-- <pre>{{result}}</pre> -->

                        </dd>
                    </dl>
                </dd>
            </dl>
        </div>
    </div>

</body>

<script>
    $(() => {

        let views = {
            基本範例() {
                var _vue = {
                    template: `
                    <div id="flex">
                        <div id="flex-1">flex-1</div>
                        <div id="flex-2">flex-2</div>
                    </div>
                    `,
                    mounted() {
                        Split(['#flex-1', '#flex-2'], {
                            elementStyle(dimension, size, gutterSize) {
                                return {
                                    'flex-basis': 'calc(' + size + '% - ' + gutterSize + 'px)',
                                }
                            },
                            gutterStyle(dimension, gutterSize) {
                                return {
                                    'flex-basis': gutterSize + 'px',
                                }
                            },
                        })
                    },
                };
                return { _vue };
            }, 垂直分割() {
                var _vue = {
                    template: `
                    <div class="split split-horizontal">
                        <div id="c" class="split content">c</div>
                        <div id="d" class="split content">d</div>
                    </div>
                    `,
                    mounted() {
                        Split(['#c', '#d'], {
                            direction: 'vertical',
                            sizes: [25, 75],
                            gutterSize: 8,
                            cursor: 'row-resize'
                        })
                    },

                };
                return { _vue };
            },
            '上2下1'() {
                var _vue = {
                    template: `
                    <div style="width:100%;height:20em;">
                        <dl id="A" class="flex">
                            <dd id="A1">A1</dd>
                            <dd id="A2">A2</dd>
                        </dl>
                        <div id="B" class="split split-horizontal">
                            B
                        </div>
                    </div>
                    `,
                    mounted() {
                        Split(['#A', '#B'], {
                            direction: 'vertical',
                            //sizes: [25, 75],
                            gutterSize: 8,
                            cursor: 'row-resize'
                        })
                        Split(['#A1', '#A2'], {
                            
                            gutterSize: 8,
                            cursor: 'col-resize'
                        })

                    },
                };
                return { _vue };
            }
            , std() {
                var _vue = {
                    template: `
                    <div>
                    </div>
                    `
                };
                return { _vue };
            },
        }


        //** # Main
        for (var k in views) {
            var { _vue } = views[k]();
            Vue.component(`x-${k}`, _vue);
        }
        let tabsList = Object.keys(views);

        let tabs = {
            data: {
                tabsList,
                "currentTab": tabsList[2],
                "Code": ''
            },

            computed: {
                currentTabComponent() {
                    var _obj = views[this.currentTab];
                    this.Code = _obj;
                    var { _css } = _obj();
                    if (_css != null) styled.injectGlobal`${_css}`;
                    return `x-${this.currentTab}`;
                }
            },

            methods: {
                change() {
                    this.views[this.currentTab].template = this.Code;
                },
                copy() {

                },
                copy_com() {

                }
            },
            "el": "#app"
        };
        new Vue(tabs);
    })

</script>

</html>