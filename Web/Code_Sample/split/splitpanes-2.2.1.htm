<!DOCTYPE html>
<html>

<head>
    <title></title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jQuery-slimScroll/1.3.8/jquery.slimscroll.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <script src="https://unpkg.com/element-ui@2.13.0/lib/index.js"></script>
    <script src="https://unpkg.com/jss@9.8.7/dist/jss.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://unpkg.com/element-ui@2.13.0/lib/index.js"></script>
    <script src="node_modules/splitpanes/dist/splitpanes.umd.min.js"></script>
    <link href="node_modules/splitpanes/dist/splitpanes.css" rel="stylesheet" />

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://netdna.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.css">
    <link rel="stylesheet" href="https://unpkg.com/element-ui@2.13.0/lib/theme-chalk/index.css">

    <style>
        .flex,
        .flex dt,
        .flex dd {
            width: 100%;
            display: block;
            padding: 0px;
            margin: 0px;
        }

        .flex.f-col {
            flex-flow: column;
        }

        .flex.f-row {
            flex-flow: row;
        }

        dl.flex {
            display: flex;
        }

        .flex dt {
            flex: 0;
        }

        .flex dd {
            flex: 1;
        }

        textarea {
            width: 100%;
            height: 15em;
        }

        pre {
            width: 100%;
            height: 100%;
            background: yellow;
            margin-top: .5em;
            overflow-y: auto;
        }

        ul {
            list-style-type: none;
            margin: 0;
            padding: .3em;
        }

        li {
            min-width: 5em;
            line-height: 1.3em;
            white-space: nowrap;
        }

        li:hover {
            color: blue;
            font-weight: 400;
            cursor: pointer;
        }

        li.active {
            background-color: #20FFA6;
        }

        .d-show {
            margin: 5px;
        }

        .splitpanes__pane {
            box-shadow: 0 0 3px rgba(0, 0, 0, 0.2) inset;
            -webkit-box-pack: center;
            justify-content: center;
            -webkit-box-align: center;
            align-items: center;
            display: -webkit-box;
            display: flex;
            position: relative;
        }

        em.specs {
            font-size: 0.2em;
            line-height: 1;
            position: absolute;
            color: #bbb;
            bottom: 0.5em;
            left: 0;
            right: 0;
            text-align: center;
        }

        html,
        body,
        #app {
            height: 100%;
            margin: 0;
        }

        body {
            font-family: Helvetica, Arial, sans-serif;
            color: rgba(255, 255, 255, 0.6);
            font-size: 5em;
        }

        p {
            position: absolute;
            bottom: 5px;
            right: 5px;
            color: #666;
            z-index: 10;
            font-size: 12px;
        }

        p a {
            color: inherit;
        }
    </style>
</head>

<body class="CSBody">
    <div id="app">
        <splitpanes class="default-theme">
            <pane   splitpanes-min ='20px'>
                <ul> 
                    <li v-for="(item) in tabsList"
                        v-bind:key="item"
                        v-bind:class="['tab-button', { active: currentTab === item }]"
                        >
                        <a @click="currentTab =item"> {{item}}</a>
                    </li>
                </ul>
            </pane>
            <pane>
                <splitpanes class="default-theme" horizontal="horizontal">
                    <pane >
                        <pre>
                        https://github.com/antoniandre/splitpanes#readme
                         
                    </pre>
                    </pane>
                    <pane>3</pane>
                    <pane>4</pane>
                </splitpanes>
            </pane>
             
        </splitpanes>
    </div>

</body>

<script>
    $(() => {
        const { Splitpanes, Pane } = splitpanes;
        let views = {
 
            std() {
                var _obj = {
                    template: `
                <div>
                </div>`
                };
                return _obj;
            },
        }


        //** # Main
        for (var k in views) {
            var { _vue } = views[k]();
            Vue.component(`x-${k}`, _vue);
        }
        let tabsList = Object.keys(views);

        let tabs = {
            data: {
                tabsList,
                "currentTab": tabsList[0],
                "Code": ''
            },
            "computed": {
                currentTabComponent() {
                    var _obj = views[this.currentTab];
                    this.Code = _obj;
                    var { _css } = _obj();
                    if (_css != null) styled.injectGlobal`${_css}`;
                    return `x-${this.currentTab}`;
                }

            },
            components: { Splitpanes, Pane },

            methods: {
                change() {
                    this.views[this.currentTab].template = this.Code;
                },
                copy() {

                },
                copy_com() {

                }
            },
            "el": "#app"
        };
        Vue.config.productionTip = false
        new Vue(tabs);


    })

</script>

</html>